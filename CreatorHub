local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/ionlyusegithubformcmods/1-Line-Scripts/main/Mobile%20Friendly%20Orion')))()

local Window = OrionLib:MakeWindow({Name = "Budgie Hub | Creator Hub 1.0", HidePremium = true, IntroEnabled = false, SaveConfig = false, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Debuggers",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
 Name = "Hydroxide",
 Callback = function()
local owner = "Hosvile"
local branch = "revision"

local function webImport(file)
    return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/MC-Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
end

webImport("init")
webImport("ui/main")
   end    
})

Tab:AddButton({
 Name = "Remote spy",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
   end    
})

Tab:AddButton({
 Name = "FireServer/ReplicationStorage Spy",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremotefireserver.lua"))()
   end    
})

Tab:AddButton({
 Name = "InvokeServer Spy",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameinvokeserver.lua"))()
   end    
})

Tab:AddButton({
 Name = "InvokeClient Spy",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremoteinvokeclient.lua"))()
   end    
})

Tab:AddButton({
 Name = "To know Random Module in ReplicatedStorage",
 Callback = function()
local function getRandomModule()
    local allModules = game:GetService("ReplicatedStorage"):GetDescendants()
    local filteredModules = {}
    for _, child in ipairs(allModules) do
        if child:IsA("ModuleScript") then
            table.insert(filteredModules, child)
        end
    end
    local randomIndex = math.random(1, #filteredModules)
    return filteredModules[randomIndex]
end

local function getFullNameOfModule(module)
    local fullName = ""
    local currentObject = module
    while currentObject.Parent do
        fullName = currentObject.Name .. "." .. fullName
        currentObject = currentObject.Parent
    end
    return fullName .. currentObject.Name
end

local function displayRandomModule()
    local randomModule = getRandomModule()
    print("Случайный модуль:", getFullNameOfModule(randomModule))
end

displayRandomModule()
   end    
})

Tab:AddButton({
 Name = "RemoteEvent finder v2",
 Callback = function()
        -- Original Code by https://scriptblox.com/script/Universal-Script-workspace-tool-giver-ui-12089
-- Edited by dsgdfs/Sky
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local TextButton = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")

ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

Frame.Parent = ScreenGui
Frame.Active = true
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.0610425249, 0, 0.0939490423, 0)
Frame.Size = UDim2.new(0, 218, 0, 225)

ScrollingFrame.Parent = Frame
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.Position = UDim2.new(0.0871559605, 0, 0.155555561, 0)
ScrollingFrame.Size = UDim2.new(0, 187, 0, 136)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 35, 0)

UIListLayout.Parent = ScrollingFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

TextButton.Parent = ScrollingFrame
TextButton.BackgroundColor3 = Color3.fromRGB(117, 117, 117)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.Size = UDim2.new(0, 155, 0, 10)
TextButton.Visible = false
TextButton.Font = Enum.Font.SourceSans
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 10.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.Position = UDim2.new(-0.00129664713, 0, -0.000140406293, 0)
TextLabel.Size = UDim2.new(0, 218, 0, 25)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "RemoteEvent Fire Server GUI"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(0, 255, 30)
TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.Position = UDim2.new(0.0825688094, 0, 0.804444432, 0)
TextButton_2.Size = UDim2.new(0, 180, 0, 30)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "update list"
TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.TextSize = 14.000

local function FNDR_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local button = script.Parent.ScrollingFrame.TextButton
	button.Parent = nil
	button.Name = "slaves"
	local function updatelist()
		for i, v in script.Parent.ScrollingFrame:GetDescendants() do
			if v:IsA("TextButton") then
				v:Destroy()
			end
		end
	
		local function fireremote(remote, ...)
   if remote:IsA("RemoteEvent") then
    remote:FireServer(...)
   elseif remote:IsA("RemoteFunction") then
    local args = {...}
    if #args > 0 then
        local randomValues = {}
        for i = 1, #args do
            randomValues[i] = math.random(1, 100)
        end
        return remote:InvokeServer(unpack(randomValues))
    else
        return remote:InvokeServer()
    end
   elseif remote:IsA("Instance") then
    return remote:Clone()
   end
end
		for i, v in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do
   if v:IsA("RemoteEvent") then
    local clonebutton = button:Clone()
    clonebutton.Parent = script.Parent.ScrollingFrame
    clonebutton.Visible = true
    clonebutton.Text = v.Name
    clonebutton.MouseButton1Click:Connect(function()
     fireremote(v)
    end)
   end
  end
	end
	script.Parent.TextButton.MouseButton1Click:Connect(updatelist)
end
coroutine.wrap(FNDR_fake_script)()
local function SGRWUDK_fake_script() -- Frame.DragScript 
	local script = Instance.new('LocalScript', Frame)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {
			Position = position
		}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
end
coroutine.wrap(SGRWUDK_fake_script)()
   end    
})

Tab:AddButton({
 Name = "Turtle Spy",
 Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/BDhSQqUU", true))()
   end    
})

Tab:AddButton({
 Name = "Show ReplicatedStorage",
 Callback = function()
        local function findRemoteEvents(instance)
    for _, child in ipairs(instance:GetChildren()) do
        if child:IsA("RemoteEvent") then
            print(child:GetFullName())
        end
        findRemoteEvents(child)
    end
end

findRemoteEvents(game.ReplicatedStorage)
   end    
})

Tab:AddButton({
 Name = "Http Spy",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Httpspy/main/httpspy.txt"))()
   end    
})

Tab:AddButton({
 Name = "HttpSpy v2",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/HttpSpy/main/NotMine"))()
   end    
})

Tab:AddButton({
 Name = "Audio Logger",
 Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/tj9B565T"))()
   end    
})

Tab:AddButton({
 Name = "Subplace Teleport",
 Callback = function()
        loadstring(game:HttpGet("https://gist.githubusercontent.com/Andergraun/b435bde510c9a6c211a0a6a1bc8de634/raw/32ad40d294a39f0fbac6e793c4472b6a11ef60bc/Subplaces", true))()
   end    
})

Tab:AddButton({
 Name = "Animation Logger",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/Animation-Logger/main/Gui"))()
   end    
})

Tab:AddButton({
 Name = "Error Recognizer",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/Recognizer/main/Error"))()
   end    
})

Tab:AddButton({
 Name = "Cooldown Bypass",
 Callback = function()
        local old

old = hookfunction(wait, newcclosure(function(...)
   return old()
end))

local balls

balls = hookfunction(task.wait, newcclosure(function(...)
   return balls()
end))
   end    
})

local Tab = Window:MakeTab({
	Name = "Finders",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
 Name = "Find Current Animation",
 Callback = function()
        local player = game:GetService("Players").LocalPlayer
local character = player.Character
local humanoid = character:FindFirstChildOfClass("Humanoid")
if humanoid then
  local animator = humanoid:FindFirstChildOfClass("Animator")
  if animator then
    local playingAnimation = animator:GetPlayingAnimationTracks()[1].Animation
    if playingAnimation then
      print(playingAnimation.AnimationId)
      setclipboard(playingAnimation.AnimationId)
    else
      print("Animation doesn't play")
    end
  else
    print("Animation not found")
  end
else
  print("Player not found") 
end

Spooky = Instance.new("Sound", game.Workspace)
Spooky.Name = "Spooky"
Spooky.SoundId = "rbxassetid://3398620867"
Spooky.Volume = 1
Spooky.PlaybackSpeed = 2
Spooky.Looped = fasle
Spooky:Play()

OrionLib:MakeNotification({
	Name = "Budgie Hub",
	Content = "Information has been sent to the console",
	Image = "rbxassetid://16505492881",
	Time = 5
})
   end    
})

Tab:AddButton({
 Name = "Find Animations in Workspace",
 Callback = function()
        local animations = workspace:GetDescendants()
for i,v in pairs(animations) do
  if v:IsA("Animation") then
    print(v.AnimationId)
  end
end

Spooky = Instance.new("Sound", game.Workspace)
Spooky.Name = "Spooky"
Spooky.SoundId = "rbxassetid://3398620867"
Spooky.Volume = 1
Spooky.PlaybackSpeed = 2
Spooky.Looped = fasle
Spooky:Play()

OrionLib:MakeNotification({
	Name = "Budgie Hub",
	Content = "Information has been sent to the console",
	Image = "rbxassetid://16505492881",
	Time = 5
})
   end    
})

Tab:AddButton({
 Name = "Find Equipped Tool Nane",
 Callback = function()
        local player = game.Players.LocalPlayer
local function getCurrentItemInHand()
    if player.Character then
        for _, item in pairs(player.Character:GetChildren()) do
            if item:IsA("Tool") then
                return setclipboard(item.Name)
            end
        end
    end
    return "No item in hand"
end

print(getCurrentItemInHand())

wait()

Spooky = Instance.new("Sound", game.Workspace)
Spooky.Name = "Spooky"
Spooky.SoundId = "rbxassetid://3398620867"
Spooky.Volume = 1
Spooky.PlaybackSpeed = 2
Spooky.Looped = fasle
Spooky:Play()

OrionLib:MakeNotification({
	Name = "Budgie Hub",
	Content = "Information has been sent to the console",
	Image = "rbxassetid://16505492881",
	Time = 5
})
   end    
})

Tab:AddButton({
 Name = "Find Place Id",
 Callback = function()
        local placeId = game.PlaceId

print("place ID: ".. placeId .."")
setclipboard(placeId)

Spooky = Instance.new("Sound", game.Workspace)
Spooky.Name = "Spooky"
Spooky.SoundId = "rbxassetid://3398620867"
Spooky.Volume = 1
Spooky.PlaybackSpeed = 2
Spooky.Looped = fasle
Spooky:Play()

OrionLib:MakeNotification({
	Name = "Budgie Hub",
	Content = "Information has been sent to the console",
	Image = "rbxassetid://16505492881",
	Time = 5
})
   end    
})

Tab:AddButton({
 Name = "Modules Finder",
 Callback = function()
local objects = game.Workspace:GetDescendants()

local function isScript(obj)
    return obj:IsA("LuaSourceContainer") or obj:IsA("ModuleScript")
end

for _, obj in ipairs(objects) do
    if isScript(obj) then
        print(obj:GetFullName())
    end
end
   end    
})

Tab:AddButton({
 Name = "Find StateType",
 Callback = function()
        local player = game.Players.LocalPlayer
local humanoid = player.Character.Humanoid
print(humanoid:GetState())
setclipboard(humanoid:GetState())
   end    
})

Tab:AddButton({
 Name = "Find All Decals Id",
 Callback = function()
        local function processDecals(parent)
    for _, instance in pairs(parent:GetChildren()) do
        if instance:IsA("Decal") then
            print("Decal Texture ID:", instance.Texture)
        end
        processDecals(instance)
    end
end

processDecals(workspace)
   end    
})

Tab:AddButton({
 Name = "Find All Instances",
 Callback = function()
        local function logAllInstances(parent)
    for _, instance in pairs(parent:GetChildren()) do
        print("Instance Created:", instance.ClassName, "- Name:", instance.Name)
        logAllInstances(instance)
    end
end

logAllInstances(workspace)
   end    
})

Tab:AddButton({
 Name = "Find all ScreenGui",
 Callback = function()
 print("ScreenGui finder in game:")
        for i, v in pairs(game.Workspace:GetDescendants()) do
        if v:IsA("ScreenGui") then
            print(v.Name)
        end
    end
   end    
})

Tab:AddButton({
 Name = "Find all ImageLabel",
 Callback = function()
 print("ImageLabel finder in game:")
        for i, v in pairs(game:GetDescendants()) do
        if v:IsA("ImageLabel")  then
            print("Label Name:", v.Name, ";ID:", v.Image, ";Parent:", v.Parent)
        end
    end
   end    
})

Tab:AddButton({
 Name = "Find all SpecialMesh",
 Callback = function()
        print("SpecialMesh finder in game:")
for i, v in pairs(game:GetDescendants()) do
        if v:IsA("SpecialMesh")  then
            print("Mesh Parent:", v.Parent, ";Mesh:", v.MeshId, ";Texture:", v.TextureId)
        end
    end
   end    
})

Tab:AddButton({
 Name = "Find all StateType",
 Callback = function()
        local player = game.Players.LocalPlayer
if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    print("Current states for", player.Name)
    local states = humanoid:GetState()
    for _, state in pairs(Enum.HumanoidStateType:GetEnumItems()) do
        if humanoid:GetState(state) then
            print("- " .. state.Name)
        end
    end
else
    print("Player does not have a character or humanoid")
end
   end    
})

Tab:AddButton({
 Name = "Find Sky Id",
 Callback = function()
        print("Sky finder:")
for i, v in pairs(game.Lighting:GetChildren()) do
        if v:IsA("Sky")  then
            print("Sky Name:", v.Name)
   print("Sky Bk:", v.SkyboxBk)
  print("Sky Dn:", v.SkyboxDn)
 print("Sky Ft:", v.SkyboxFt)
print("Sky Lf:", v.SkyboxLf)
 print("Sky Rt:", v.SkyboxRt)
  print("Sky Up:", v.SkyboxUp)
        end
    end
   end    
})

Tab:AddButton({
 Name = "Find Lighting Options",
 Callback = function()
        local lg = game.Lighting
 print("Lighting Options Finder:")
print("Brightness:", lg.Brightness, ";Ambient:", lg.Ambient, ";ClockTime:", lg.ClockTime, ";Exposure Compensation:", lg.ExposureCompensation, ";Time of Day:", lg.TimeOfDay, ";Geographic Latitude:", lg.GeographicLatitude)
   end    
})

Tab:AddButton({
 Name = "Model Info GUI",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/ModelInfoGUI/main/GUI"))()
   end    
})

local Tab = Window:MakeTab({
	Name = "Bypass",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
 Name = "Adonis bypass",
 Callback = function()
        for k,v in pairs(getgc(true)) do if pcall(function() return rawget(v,"indexInstance") end) and type(rawget(v,"indexInstance")) == "table" and (rawget(v,"indexInstance"))[1] == "kick" then v.tvk = {"kick",function() return game.Workspace:WaitForChild("") end} end end
   end    
})

Tab:AddButton({
 Name = "Client Anti Kick",
 Callback = function()
        local plr = game:GetService("Players").LocalPlayer; getgenv().Anti = true; local mt = getrawmetatable(game); local oldNamecall = mt.__namecall; setreadonly(mt, false); mt.__namecall = newcclosure(function(self, ...) if self == plr then local namecallmethod = getnamecallmethod(); if namecallmethod:lower() == "kick" and getgenv().Anti then return warn("[ANTI-KICK] Client Tried To Call Kick Function On LocalPlayer") end elseif self ~= plr then local namecallmethod = getnamecallmethod(); if namecallmethod:lower() == "kick" then return nil end end return oldNamecall(self, ...) end); setreadonly(mt, true)
   end    
})

Tab:AddButton({
 Name = "Anti kick v2",
 Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-anti-cheat-bypass-strong-12459"))()
   end    
})

Tab:AddButton({
 Name = "Anti kick v3",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Bjkefe2/Crimson-CraftWars/main/Crimson"))()
   end    
})

Tab:AddButton({
 Name = "Powerful Anti kick",
 Callback = function()
        xpcall(function() OldNameCall = hookmetamethod(game.Players.LocalPlayer, "__namecall", function(Self, ...) local Args = {...} local NamecallMethod = getnamecallmethod() if Self == game.Players.LocalPlayer and NamecallMethod == "Kick" then return nil end return OldNameCall(Self, ...) end) print("Anti Kick Enabled.") end, function(e) print(e) end)
   end    
})

Tab:AddButton({
 Name = "newindex bypass",
 Callback = function()
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}

local Detected, Kill

setthreadidentity(2)

for i, v in getgc(true) do
    if typeof(v) == "table" then
        local DetectFunc = rawget(v, "Detected")
        local KillFunc = rawget(v, "Kill")
    
        if typeof(DetectFunc) == "function" and not Detected then
            Detected = DetectFunc
            
            local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                if Action ~= "_" then
                    if DEBUG then
                        warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
                    end
                end
                
                return true
            end)

            table.insert(Hooked, Detected)
        end

        if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
            Kill = KillFunc
            local Old; Old = hookfunction(Kill, function(Info)
                if DEBUG then
                    warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
                end
            end)

            table.insert(Hooked, Kill)
        end
    end
end

local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local LevelOrFunc, Info = ...

    if Detected and LevelOrFunc == Detected then
        if DEBUG then
            warn(`zins | adonis bypassed`)
        end

        return coroutine.yield(coroutine.running())
    end
    
    return Old(...)
end))
-- setthreadidentity(9)
setthreadidentity(7)
   end    
})

Tab:AddButton({
 Name = "Lag walk bypass",
 Callback = function()
local players = game:GetService('Players')
local lplr = players.LocalPlayer
local lastCF, stop, heartbeatConnection
local function start()
    heartbeatConnection = game:GetService('RunService').Heartbeat:Connect(function()
        if stop then
            return 
        end 
        lastCF = lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame
    end)
    lplr.Character:FindFirstChildOfClass('Humanoid').RootPart:GetPropertyChangedSignal('CFrame'):Connect(function()
        stop = true
        lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame = lastCF
        game:GetService('RunService').Heartbeat:Wait()
        stop = false
    end)    
    lplr.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
        heartbeatConnection:Disconnect()
    end)
end

lplr.CharacterAdded:Connect(function(character)
    repeat 
        game:GetService('RunService').Heartbeat:Wait() 
    until character:FindFirstChildOfClass('Humanoid')
    repeat 
        game:GetService('RunService').Heartbeat:Wait() 
    until character:FindFirstChildOfClass('Humanoid').RootPart
    start()
end)

lplr.CharacterRemoving:Connect(function()
    heartbeatConnection:Disconnect()
end)

start()
   end    
})

Tab:AddButton({
 Name = "RoTotal",
 Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-RoTotal-9561"))()
   end    
})

Tab:AddButton({
 Name = "Rayfled key bypass",
 Callback = function()
        local load
load = hookfunc(loadstring, function(script, ...)
	return load(script:gsub("if Settings.KeySystem then", "if 1==2 then"), ...)
end)
   end    
})

Tab:AddButton({
 Name = "logs",
 Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-logs-5726"))()
   end    
})

Tab:AddButton({
 Name = "Tp place bypass",
 Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Client-Anti-Place-TP-7430"))()
   end    
})

Tab:AddButton({
 Name = "32 bit bypass",
 Callback = function()
        local X;
X = hookmetamethod(game, "__namecall",function(self,...)
local args = {...};
local method = getnamecallmethod()
if method == "Kick"   then

return
end
return X(self,...)
end)
   end    
})

Tab:AddButton({
 Name = "Chat bypass",
 Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Clickgameplay/no-tag-script/main/.NoTagScript"))()
   end    
})

local Tab = Window:MakeTab({
	Name = "Useful Sites",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
 Name = "Link Bypass",
 Callback = function()
        setclipboard("https://bypass.city")
   end    
})

Tab:AddButton({
 Name = "Key Bypass",
 Callback = function()
        setclipboard("Telegram: @ArxBypass_bot")
   end    
})

Tab:AddButton({
 Name = "Code Obfuscator",
 Callback = function()
        setclipboard("http://luaobfuscator.epizy.com")
   end    
})

Tab:AddButton({
 Name = "Link Obfuscator",
 Callback = function()
        setclipboard("https://glot.io/snippets/fz3f15yo3g")
   end    
})

local Tab = Window:MakeTab({
	Name = "Facts",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddParagraph("HTML support Roblox","Many people don’t know, but Roblox supports HTML, but partially. Only used in ScreenGui and the like")
Tab:AddLabel("Here is an example script for HTML:")

Tab:AddDropdown({
	Name = "Open dropdown",
	Default = "1",
	Options = {"<b><font size='50'>Close dropdown</font></b>"},
	Callback = function(Value)
		print(Value)
	end    
})

Tab:AddLabel("Roblox support some fonts:")
Tab:AddLabel("<i><font size='10'>Font (i)</font></i>\n<u><font size='10'>Font (u)</font></u>\n<s><font size='10'>Font (s)</font></s>")
Tab:AddLabel("You can also make colored text:")
Tab:AddLabel("<p><font size='15' color='#00FF00'>This text is green</font></p>")

local dfo = {
 "\\n – go to new line",
 "\\u – addition Unicode symbols",
 "\\t – tabulation",
 "\\r – carriage return",
 "\\f – go to new page",
 "\\b – Removing a symbol back"
}
Tab:AddParagraph("Table special symbols: ", table.concat(dfo, "\n"))

local Tab = Window:MakeTab({
	Name = "Setclipboard",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
 Name = "Best way to remove object",
 Callback = function()
 fgg = [[
 game.Debris:AddItem(a, b)
 -- a – object name
 -- b – After how many seconds will the object be removed?
 ]]
        setclipboard(fgg)
   end    
})

local Tab = Window:MakeTab({
	Name = "Terms",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddParagraph("UNC","UNC – Universal Naming Convention. It is a way of specifying the location of files and resources on a server or network. Simply put, this is testing the ability of an exploit or injector to work")
Tab:AddParagraph("LuaU","Lua Universal")
Tab:AddParagraph("LuaC","Lua script compilation process")
Tab:AddParagraph("API","API – Application Programming Interface. Refers to a set of rules and protocols that define how different software components should interact with each other")
Tab:AddParagraph("Navmesh","Navigation system for NPC movement control")
Tab:AddParagraph("Instance Folders","This is a special storage that allows you to organize and group Instance objects in the game space")
Tab:AddParagraph("Memory store","Memory store – a service that allows you to store and use data in server memory")
Tab:AddParagraph("Debris","DebrisService – a service that manages and removes objects that are no longer needed in the game space")
Tab:AddParagraph("Skid","Skid(Script Kiddie) – a very bad status for a scripter. This term is used if a cheater plagiarizes scripts")
Tab:AddParagraph("Memoization","Technique for caching calculation results to speed up work")
Tab:AddParagraph("Delta time","Time between two consecutive frames")
Tab:AddParagraph("AppDelegate","Object responsible for managing the application life cycle")
Tab:AddParagraph("Callback","Functions called in response to certain events or situations")
Tab:AddParagraph("Tick","A tick is a unit of time in Roblox, similar to a frame in other engines. This is the time that has passed since the last update of the game world. You can use script.Changed or RunService.Stepped events to access ticks")
Tab:AddParagraph("UTC","UTC – (Universal Coordinated Time) is the current time in Roblox, similar to 'real-world time'. You can use the Workspace.DistributedGameTime property to get the current UTC time")
Tab:AddParagraph("FE","Filtering Enabled is a Roblox server security mode that checks and filters all information transmitted between the client and the server")
Tab:AddParagraph("Refactoring","The process of improving the structure of code without changing its external behavior")
Tab:AddParagraph("Maid","Pattern for managing objects and clearing them in memory")
Tab:AddParagraph("LuaULinting","Static analysis of LuaU code to detect potential problems")
Tab:AddParagraph("Rojo","System for assembling and publishing Roblox projects")
Tab:AddParagraph("LayerCollector","Component for creating layer overlay effects in the game interface")
Tab:AddParagraph("Metrics","A tool for collecting and analyzing statistical data about gameplay")
Tab:AddParagraph("Stud","Stud – basic unit of measurement for objects")
Tab:AddParagraph("Yield","Yield – pause script execution until a certain event occurs")
Tab:AddParagraph("Elapsedtime","Elapsedtime - time elapsed since the game started")
Tab:AddParagraph("Rendering Pipeline","Rendering Pipeline - a system for visual processing and rendering of the game world")
Tab:AddParagraph("CSG","CSG (Constructive Solid Geometry) - A system for constructing complex objects from primitive Part blocks")
Tab:AddParagraph("Serialization","Serialization - The process of converting data into a format suitable for transmission over a networ")
Tab:AddParagraph("Interpolation","Interpolation - An algorithm for smoothing the movement of objects to reduce visible 'jerking' due to delays")
Tab:AddParagraph("RPCs","RPCs (Remote Procedure Calls) - A mechanism for calling functions on a remote server from a client")
Tab:AddParagraph("JSON","JSON (JavaScript Object Notation) is one of the main formats for storing and transmitting data")
